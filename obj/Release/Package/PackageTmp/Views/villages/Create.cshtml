@model proera.villages

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>villages</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.region, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("region", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.region, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.departement, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("departement", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.departement, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.idLocalite, "idLocalite", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("idLocalite", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idLocalite, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.village, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.village, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.village, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.population, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.population, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.population, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.education, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            Oui : @Html.RadioButtonFor(model => model.education, "1", new { htmlAttributes = new { @class = "form-control" } })
            Non : @Html.RadioButtonFor(model => model.education, "0", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.education, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.sante, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            Oui : @Html.RadioButtonFor(model => model.sante, "1", new { htmlAttributes = new { @class = "form-control" } })
            Non : @Html.RadioButtonFor(model => model.sante, "0", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.sante, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.forage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            Oui : @Html.RadioButtonFor(model => model.forage, "1", new { htmlAttributes = new { @class = "form-control" } })
            Non : @Html.RadioButtonFor(model => model.forage, "0", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.forage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.antenne_bts, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            Oui : @Html.RadioButtonFor(model => model.antenne_bts, "1", new { htmlAttributes = new { @class = "form-control" } })
            Non : @Html.RadioButtonFor(model => model.antenne_bts, "0", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.antenne_bts, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.moulin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            Oui : @Html.RadioButtonFor(model => model.moulin, "1", new { htmlAttributes = new { @class = "form-control" } })
            Non : @Html.RadioButtonFor(model => model.moulin, "0", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.moulin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.longitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.longitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.longitude, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.latitude, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.latitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.latitude, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.etattravaux, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control" id="etatravaux" nom="etatravaux">
                <option value="MIS EN SERVICE">MIS EN SERVICE</option>
                <option value="EN COURS">EN COURS</option>
                <option value="EN PROJET">EN PROJET</option>
                <option value="INDEFINI">INDEFINI</option>
            </select>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.code_prog, "code_prog", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("code_prog", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.code_prog, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {

       

        $("#region").change(function () {
            data = {
                id: $("#region").val()
            }
            $.ajax({
                type: "POST",
                url: "/clients/changementregion",
                data: data,
                success: function (data) {
                    $("#departement").empty().
                        append(data.departement)
                    $("#idLocalite").empty().
                        append(data.commune)
                },
                error: function () {
                    alert("Error occured!!")
                }
            });
        })


        $("#departement").change(function () {
            data = {
                code_departement: $("#departement").val()
            }
            $.ajax({
                type: "POST",
                url: "/clients/changementdepartement",
                data: data,
                success: function (data) {
                    $("#idLocalite").empty().
                        append(data.commune)
                },
                error: function () {
                    alert("Error occured!!")
                }
            });
        })

    });
</script>