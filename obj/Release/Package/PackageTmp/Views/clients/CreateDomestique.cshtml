@model proera.clients

@{
    ViewBag.Title = "Creation";
}
<br />
<h2>Creation d'un client domestique</h2>


@using (Html.BeginForm("Create", "clients", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form" style="width:60%">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <hr />

    <input type="hidden" name="usage" value="domestique" />

    <div class="form-row">
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Nom1, "Nom", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nom1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nom1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Prenom, htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Prenom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Prenom, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Tel, "Telephone", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Num_ID, "Numero de CNI", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Num_ID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Num_ID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.Date_Abonnement, "Date Abonnement", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    <input type="date" name="Date_Abonnement" required id="Date_Abonnement" class="form-control" />
                </div>
            </div>
        </div>


    </div>






    <hr />

    <div class="form-row">

        <div class="col-sm-6">
            <div class="form-group">
                @Html.Label("Region", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.DropDownList("regions", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        </div>


        <div class="col-sm-6">
            <div class="form-group">
                @Html.Label("Departement", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.DropDownList("departements", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        </div>


    </div>



    <div class="form-row">

        <div class="col-sm-6">
            <div class="form-group">
                @Html.Label("Commune", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.DropDownList("communes", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        </div>

        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.codevillage, "Village", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.DropDownList("codevillage", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.codevillage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <hr />


    <div class="form-row">

        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Type_Elect, "Type Electrification", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    <select name="Type_Elect" id="Type_Elect" class="form-control">
                        <option value="RESEAU">RESEAU</option>
                        <option value="CENTRALE PV">CENTRALE PV</option>
                    </select>
                </div>
            </div>
        </div>


        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.calibre, "Calibre", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.DropDownList("calibre", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.calibre, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <div class="form-row">
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.NivPuissance, "Niveau de Puissance", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.DropDownList("NivPuissance", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NivPuissance, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.NivPuissance, "Type Branchement", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.DropDownList("TypeBranch", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

        </div>
    </div>


    <input type="hidden" name="Raison_Social" id="Raison_Social" value="PARTICULIER" />





    <div class="form-row">
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.NivPuissance, "Frais Abonnement", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    <select id="fraisabonnement" name="fraisabonnement" class="form-control">
                    </select>
                    @Html.ValidationMessageFor(model => model.NivPuissance, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Montant_Encaisse, "Montant Ecaissé", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Montant_Encaisse, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Montant_Encaisse, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-row">

        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Bordereau, htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    @Html.DropDownList("bordereau", null, htmlAttributes: new { @class = "form-control" })
                    <button type="button" class="btn btn-outline-success btn-sm" data-toggle="modal" data-target="#exampleModal">
                        Nouveau Bordereau
                    </button>
                    @Html.ValidationMessageFor(model => model.Bordereau, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.SoldeTotal, "Solde Total", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    <input type="number" readonly name="SoldeTotal" id="SoldeTotal" class="form-control" />
                    @Html.ValidationMessageFor(model => model.SoldeTotal, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


    </div>

    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">
                @Html.Label("mode de paiement", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    <div class="form-group">
                        <div class="form-check">
                            <input class="form-check-input" id="paiementespeces" value="1" type="radio" name="modepaiement" checked>
                            <label class="form-check-label">Especes</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" id="paiementcoupon" value="2" type="radio" name="modepaiement">
                            <label class="form-check-label">Coupon</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" value="3" id="paiementcheque" type="radio" name="modepaiement">
                            <label class="form-check-label">Cheque</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6" id="txtnumpaiement">
            <div class="form-group">
                @Html.LabelFor(model => model.numeropaiement, "Numero Paiement", htmlAttributes: new { @class = "control-label col" })
                <div class="col-md-10">
                    <input type="text" name="numeropaiement" id="numeropaiement" class="form-control" />
                    @Html.ValidationMessageFor(model => model.numeropaiement, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <input type="hidden" name="activite" value="38" />
  


    <div class="form-group">
        @Html.LabelFor(model => model.Commentaire, htmlAttributes: new { @class = "control-label col" })
        <div class="col-md-10">
            <textarea name="Commentaire" id="Commentaire" class="form-control"></textarea>
            @Html.ValidationMessageFor(model => model.Commentaire, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Enregistrer" class="btn btn-outline-success" />
        </div>
    </div>
</div>
}

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Creation Bordereau</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <h4>bordereaux</h4>
                    <hr />
                    <div class="form-group">
                        <label class="control-label col">Numero</label>
                        <div class="col-md-10">
                            <input type="text" name="numero" id="numerobordereau" class="form-control" />
                        </div>
                    </div>


                    <div class="form-group">
                        <label class="control-label col">Montant</label>
                        <div class="col-md-10">
                            <input type="number" name="montant" id="montantbordereau" class="form-control" />
                        </div>

                    </div>


                    <input type="hidden" name="type" id="typebordereau" value="abonnement" />

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" id="savebordereau" data-dismiss="modal" class="btn btn-primary">Enregistrer</button>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {

        $("#txtnumpaiement").attr("hidden", true)

        $('#paiementcoupon').click(function () {
            $("#txtnumpaiement").removeAttr("hidden")
        })

        $('#paiementespeces').click(function () {
            $("#txtnumpaiement").attr("hidden", true)

            $("#numeropaiement").val("")
            
        })
        
        $('#paiementcheque').click(function () {
            $("#txtnumpaiement").removeAttr("hidden")
        })

        data = {
            nivpuissance: $("#NivPuissance").val(),
            calibre: $("#calibre").val(),
            typeelec: $("#Type_Elect").val(),
            typebranchement: $("#TypeBranch").val()
        }



        $.ajax({
            type: "POST",
            url: "/clients/changementnivpuissance",
            data: data,
            success: function (data) {
                // alert(data)
                $('#fraisabonnement').empty()
                    .append(data.baremes)

                if ($('#fraisabonnement').val > 0) {

                    $("#Montant_Encaisse").prop("disabled", false)
                    $("#SoldeTotal").val($('#fraisabonnement').val() - $("#Montant_Encaisse").val())

                } else {
                    $("#SoldeTotal").val("")
                    $("#Montant_Encaisse").val("")
                }
            },
            error: function () {
                alert("Error occured!!")
            }
        });

        $("#calibre").change(function () {
            data = {
                nivpuissance: $("#NivPuissance").val(),
                calibre: $("#calibre").val(),
                typeelec: $("#Type_Elect").val(),
                typebranchement: $("#TypeBranch").val()
            }



            $.ajax({
                type: "POST",
                url: "/clients/changementnivpuissance",
                data: data,
                success: function (data) {
                    //alert(data)
                    $('#fraisabonnement').empty()
                        .append(data.baremes)

                    $('#TypeBranch').empty()
                        .append(data.branches)

                    $('#calibre').empty()
                        .append(data.calibres)

                    if ($('#fraisabonnement').val > 0) {

                        $("#Montant_Encaisse").prop("disabled", false)
                        $("#SoldeTotal").val($('#fraisabonnement').val() - $("#Montant_Encaisse").val())

                    } else {
                        $("#SoldeTotal").val("")
                        $("#Montant_Encaisse").val("")
                    }
                },
                error: function () {
                    alert("Error occured!!")
                }
            });
        })


        $("#savebordereau").click(function () {
            //alert($("#nivpuissance").val())
            data = {
                numero: $("#numerobordereau").val(),
                montant: $("#montantbordereau").val(),
                type: $("#typebordereau").val()
            }



            $.ajax({
                type: "POST",
                url: "/clients/savebordereau",
                data: data,
                success: function (data) {
                    $('#bordereau').empty()
                        .append(data)

                },
                error: function () {
                    alert("Error occured!!")
                }
            });



        });


        $("#NivPuissance").change(function () {
            //alert($("#nivpuissance").val())
            data = {
                nivpuissance: $("#NivPuissance").val(),
                calibre: $("#calibre").val(),
                typeelec: $("#Type_Elect").val(),
                typebranchement: $("#TypeBranch").val()
            }



            $.ajax({
                type: "POST",
                url: "/clients/changementnivpuissance",
                data: data,
                success: function (data) {
                    //alert(data.baremes)
                    $('#fraisabonnement').empty()
                        .append(data.baremes)

                    $('#TypeBranch').empty()
                        .append(data.branches)

                    $('#calibre').empty()
                        .append(data.calibres)

                    if ($('#fraisabonnement').val > 0) {

                        $("#Montant_Encaisse").prop("disabled", false)
                        $("#SoldeTotal").val($('#fraisabonnement').val() - $("#Montant_Encaisse").val())

                    } else {
                        $("#SoldeTotal").val("")
                        $("#Montant_Encaisse").val("")
                    }
                },
                error: function () {
                    alert("Error occured!!")
                }
            });



        });
        $("#calibre").change(function () {
            //alert($("#nivpuissance").val())
            data = {
                nivpuissance: $("#NivPuissance").val(),
                calibre: $("#calibre").val(),
                typeelec: $("#Type_Elect").val(),
                typebranchement: $("#TypeBranch").val()
            }



            $.ajax({
                type: "POST",
                url: "/clients/changementnivpuissance",
                data: data,
                success: function (data) {
                    //alert(data)
                    $('#fraisabonnement').empty()
                        .append(data.baremes)

                    if ($('#fraisabonnement').val > 0) {

                        $("#Montant_Encaisse").prop("disabled", false)
                        $("#SoldeTotal").val($('#fraisabonnement').val() - $("#Montant_Encaisse").val())

                    } else {
                        $("#SoldeTotal").val("")
                        $("#Montant_Encaisse").val("")
                    }
                },
                error: function () {
                    alert("Error occured!!")
                }
            });



        });

        $("#Type_Elect").change(function () {
            //alert($("#nivpuissance").val())
            data = {
                nivpuissance: $("#NivPuissance").val(),
                calibre: $("#calibre").val(),
                typeelec: $("#Type_Elect").val(),
                typebranchement: $("#TypeBranch").val()
            }



            $.ajax({
                type: "POST",
                url: "/clients/changementnivpuissance",
                data: data,
                success: function (data) {
                    //alert(data)
                    $('#fraisabonnement').empty()
                        .append(data.baremes)

                    if ($('#fraisabonnement').val > 0) {

                        $("#Montant_Encaisse").prop("disabled", false)
                        $("#SoldeTotal").val($('#fraisabonnement').val() - $("#Montant_Encaisse").val())

                    } else {
                        $("#SoldeTotal").val("")
                        $("#Montant_Encaisse").val("")
                    }
                },
                error: function () {
                    alert("Error occured!!")
                }
            });



        });

        $("#TypeBranch").change(function () {
            //alert($("#nivpuissance").val())
            data = {
                nivpuissance: $("#NivPuissance").val(),
                calibre: $("#calibre").val(),
                typeelec: $("#Type_Elect").val(),
                typebranchement: $("#TypeBranch").val()
            }



            $.ajax({
                type: "POST",
                url: "/clients/changement",
                data: data,
                success: function (data) {
                    //alert(data)
                    $('#fraisabonnement').empty()
                        .append(data.baremes)

                    if ($('#fraisabonnement').val > 0) {

                        $("#Montant_Encaisse").prop("disabled", false)
                        $("#SoldeTotal").val($('#fraisabonnement').val() - $("#Montant_Encaisse").val())

                    } else {
                        $("#SoldeTotal").val("")
                        $("#Montant_Encaisse").val("")
                    }
                },
                error: function () {
                    alert("Error occured!!")
                }
            });



        }); $("#Montant_Encaisse").change(function () {
            if ($('#fraisabonnement').val() > 0) {
                //alert($("#Montant_Encaisse").val())
                $("#SoldeTotal").val($('#fraisabonnement').val() - $("#Montant_Encaisse").val())
            }
        })

        $("#fraisabonnement").change(function () {
            if ($('#fraisabonnement').val > 0) {

                $("#Montant_Encaisse").prop("disabled", false)
                $("#SoldeTotal").val($('#fraisabonnement').val() - $("#Montant_Encaisse").val())

            } else {
                $("#SoldeTotal").val("")
                $("#Montant_Encaisse").val("")
            }
        })

        if ($('#fraisabonnement').val > 0) { } else {
            //$("#Montant_Encaisse").prop("disabled", true)
        }


        $("#regions").change(function () {
            data = {
                id: $("#regions").val()
            }
            $.ajax({
                type: "POST",
                url: "/clients/changementregion",
                data: data,
                success: function (data) {
                    $("#departements").empty().
                        append(data.departement)
                    $("#communes").empty().
                        append(data.commune)
                    $("#codevillage").empty().
                        append(data.village)
                },
                error: function () {
                    alert("Error occured!!")
                }
            });
        })


        $("#departements").change(function () {
            data = {
                code_departement: $("#departements").val()
            }
            $.ajax({
                type: "POST",
                url: "/clients/changementdepartement",
                data: data,
                success: function (data) {
                    $("#communes").empty().
                        append(data.commune)
                    $("#codevillage").empty().
                        append(data.village)
                },
                error: function () {
                    alert("Error occured!!")
                }
            });
        })


        $("#communes").change(function () {
            data = {
                code_com: $("#communes").val()
            }
            $.ajax({
                type: "POST",
                url: "/clients/changementcommune",
                data: data,
                success: function (data) {
                    $("#codevillage").empty().
                        append(data.village)
                },
                error: function () {
                    alert("Error occured!!")
                }
            });
        })
    });
</script>
