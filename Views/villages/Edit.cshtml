@model proera.villages

@{
    ViewBag.Title = "Edit";
}

<h2>MàJ Infos Village</h2>

<div class="form-group">
    @Html.LabelFor(model => model.region, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("region", null, htmlAttributes: new { @class = "form-control" })
    </div>
</div>
 
<div class="form-group">
    @Html.LabelFor(model => model.departement, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("departement", null, htmlAttributes: new { @class = "form-control" })
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>villages</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.id)


    <div class="form-row">
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.idLocalite, "Commune", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idLocalite", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idLocalite, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.village, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" name="village" id="village" class="form-control" />
                    @Html.ValidationMessageFor(model => model.village, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <div class="form-row">
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.population, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.population, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.population, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.longitude, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.longitude, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.longitude, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.latitude, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.latitude, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.latitude, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.etattravaux, "Etat Travaux", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="form-control" id="etattravaux" name="etattravaux">
                        <option value="EXPLOITE">EXPLOITE</option>
                        <option value="NON EXPLOITE">NON EXPLOITE</option>
                        <option value="EN PROJET">EN PROJET</option>
                        <option value="INDEFINI">INDEFINI</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.code_prog, "Programme", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownList("code_prog", null, htmlAttributes: new { @class = "form-control" })
                </div>
                <div class="col-md-5">
                    Tech : <p id="techprog"></p>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.technologie, "Technologie", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.DropDownList("technologie", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.nbrclients, "Nombre Clients", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nbrclients, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <div class="col">

        </div>
    </div>

    <div class="form-row">
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.education, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.education, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.sante, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.sante, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.forage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.forage, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.antenne_bts, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.antenne_bts, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.moulin, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.moulin, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <div class="col">

            <div class="form-group">
                @Html.LabelFor(model => model.source, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.source, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.source, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    


    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.code_village, new { htmlAttributes = new { @class = "form-control", @hidden = "hidden" } })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>



    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script>
    $(document).ready(function () {

        data = {
            code_village: $("#code_village").val()
        }
        $.ajax({
            type: "POST",
            url: "/villages/changementvillage",
            data: data,
            success: function (data) {
          
                $("#village").val(data.nomvillage)
                $("#population").val(data.pop)
                $("#education").val(data.educ)
                $("#sante").val(data.sant)
                $("#forage").val(data.forages)
                $("#antenne_bts").val(data.antbts)
                $("#moulin").val(data.moul)
                $("#longitude").val(data.longi)
                $("#latitude").val(data.lati)
                $("option[value='" + data.etattra + "']").prop('selected', true);
                $("#techprog").html(data.techprog);
                $("#nbrclients").val(data.nbrclient);
                
            },
            error: function () {
                alert("Error occured!!")
            }
        });


        $("#region").change(function () {
            data = {
                id: $("#region").val()
            }
            $.ajax({
                type: "POST",
                url: "/clients/changementregion",
                data: data,
                success: function (data) {
                    $("#departement").empty().
                        append(data.departement)
                    $("#idLocalite").empty().
                        append(data.commune)
                },
                error: function () {
                    alert("Error occured!!")
                }
            });
        })


        $("#departement").change(function () {
            data = {
                code_departement: $("#departement").val()
            }
            $.ajax({
                type: "POST",
                url: "/clients/changementdepartement",
                data: data,
                success: function (data) {
                    $("#idLocalite").empty().
                        append(data.commune)
                },
                error: function () {
                    alert("Error occured!!")
                }
            });
        })

    });
    </script>
